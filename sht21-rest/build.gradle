buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.0.1'
    }
}

plugins {
    id 'application'
    id 'findbugs'
    id 'idea'
    id 'jacoco'
    id 'java'
    id 'pmd'
    id 'project-report'
    id 'com.github.kt3k.coveralls' version '2.0.1'
    id 'maven-publish'
    id 'com.jfrog.bintray' version '1.2'
}

project.description = 'SHT21 REST-Interface'
project.archivesBaseName = 'de.freitag.stefan.sht21.rest'
project.version = '1.0.1'

sourceCompatibility = 1.8
targetCompatibility = 1.8

jar {
    baseName = 'de.freitag.stefan.sht21.rest'
    manifest {
        attributes 'Implementation-Title': 'SHT21 REST-Interface', 'Implementation-Version': version
    }

}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

repositories {
    mavenCentral()
}


mainClassName = "de.freitag.stefan.sht21.rest.SHT21RestApplication"

dependencies {
    compile("io.dropwizard:dropwizard-core:0.8.2")
    compile project(':sht21-core')
    compile("org.apache.logging.log4j:log4j-api:2.7")
    compile("org.apache.logging.log4j:log4j-core:2.7")
    testCompile('org.glassfish.jersey.core:jersey-client:2.17')
    testCompile('junit:junit:4.12')

}


applicationDistribution.from("src/main/resources/config.yml") {
    into "bin"
}
run {
    args 'server', 'src/main/resources/config.yml'
}

def pomConfig = {
    inceptionYear '2015'
    licenses {
        license {
            name "The MIT License (MIT)"
            url "https://github.com/stefanfreitag/SHT21.REST/blob/master/LICENSE"
            distribution "repo"
        }
    }

    scm {
        url 'scm:git:https://github.com/stefanfreitag/SHT21.REST'
        connection 'scm:git:https://github.com/stefanfreitag/SHT21.REST'
        developerConnection 'scm:git:https://github.com/stefanfreitag/SHT21.REST'
    }
    developers {
        developer {
            id "sfreitag"
            name "Stefan Freitag"
            email "stefan@stefreitag.de"
            timezone "Europe/Berlin"
            roles {
                role "developer"
            }
        }
    }
}

findbugs {
    ignoreFailures = true
    sourceSets = [sourceSets.main]
    reportsDir = file("$project.buildDir/reports/findbugs")
    effort = "max"
}

pmd {
    ignoreFailures = true
    sourceSets = [sourceSets.main]
    reportsDir = file("$project.buildDir/reports/pmd")
    ruleSets = [
            "java-basic",
            "java-braces",
            "java-design",
            "java-finalizers",
            "java-naming",
            "java-optimizations",
            "java-strings",
    ]
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = false
    }
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
            artifact sourcesJar
            artifact javadocJar
            artifact distZip

            groupId 'de.freitag.stefan'
            artifactId 'sht21-rest'
            pom.withXml {
                def root = asNode()
                root.appendNode('description', 'Java Library for accessing the Raspi-SHT21 hardware')
                root.children().last() + pomConfig
            }
        }
    }
}
bintrayUpload.dependsOn(build)

bintray {
    if (!project.hasProperty('bintray_user')) {
        project.ext.bintray_user = 'default'
    }
    if (!project.hasProperty('bintray_api_key')) {
        project.ext.bintray_api_key = 'default'
    }

    user = "$bintray_user"
    key = "$bintray_api_key"
    publications = ['mavenJava']
    dryRun = false
    publish = true
    pkg {
        repo = 'maven'
        name = 'sht21-rest'
        desc = 'Java Library for accessing the Raspi-SHT21 hardware'
        websiteUrl = 'https://github.com/stefanfreitag/SHT21.REST'
        issueTrackerUrl = 'https://github.com/stefanfreitag/SHT21.REST/issues'
        vcsUrl = 'git://github.com/stefanfreitag/SHT21.REST.git'
        licenses = ['MIT']
        labels = []
        publicDownloadNumbers = true
        version {
            name = project.version
            vcsTag = project.version
            gpg {
                sign = true
                passphrase = project.hasProperty('gpg_passphrase') ? gpg_passphrase : ''
            }
        }
    }
}
